import { parse } from "./internals/parse.js";
import { helper } from "./internals/helper.js";
import { errorReport } from "./internals/error-report.js";
import { applyDefaults } from "./internals/parsing/apply-defaults.js";
import { validateRequirements } from "./internals/parsing/validate-requirements.js";
export function cli({ logger = console, exit = code => process.exit(code), } = {}) {
    return function (spec) {
        try {
            const command = parse(spec);
            if ("help" in command.params) {
                for (const report of helper(command))
                    logger.log(report);
                return exit(0);
            }
            validateRequirements(command.spec.args, command.args);
            validateRequirements(command.spec.params, command.params);
            applyDefaults(command.spec.args, command.args);
            applyDefaults(command.spec.params, command.params);
            return command;
        }
        catch (err) {
            const errortext = errorReport(err);
            const printError = () => logger.error(errortext.join(" "));
            printError();
            logger.error("");
            for (const report of helper({ spec }))
                logger.error(report);
            logger.error("");
            printError();
            return exit(1);
        }
    };
}
//# sourceMappingURL=cli.js.map